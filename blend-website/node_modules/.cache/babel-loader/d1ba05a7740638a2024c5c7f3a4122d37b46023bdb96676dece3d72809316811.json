{"ast":null,"code":"import { createStore } from 'vuex';\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore, doc, setDoc, getDoc, getDocs, collection, addDoc, query, orderBy, where, updateDoc } from \"firebase/firestore\";\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDmIaxkHWpEP0X8eYGEQ9YoPtFTtsYtcaM\",\n  authDomain: \"barista-blend.firebaseapp.com\",\n  projectId: \"barista-blend\",\n  storageBucket: \"barista-blend.appspot.com\",\n  messagingSenderId: \"438579021661\",\n  appId: \"1:438579021661:web:2bcd8c49187dc8277a0ab4\",\n  measurementId: \"G-PW10CEZGVE\"\n};\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\nexport default createStore({\n  state: {\n    workspace: {},\n    blendCard: {}\n  },\n  getters: {\n    workspace(state) {\n      return state.workspace;\n    },\n    blendCard(state) {\n      return state.blendCard;\n    }\n  },\n  mutations: {\n    setWorkspace(state, payload) {\n      state.workspace = payload;\n    },\n    setBlendCard(state, payload) {\n      state.blendCard = payload;\n    }\n  },\n  actions: {\n    async fetchWorkspace({\n      commit\n    }, id) {\n      const docRef = doc(db, `workspaces/${id}`);\n      const docSnap = await getDoc(docRef);\n      if (docSnap.exists()) {\n        docData = docSnap.data();\n        commit(\"setWorkspace\", docData);\n        const blendCardRef = doc(db, docData.blendCard);\n      } else {\n        console.log(\"No such document!\");\n      }\n    },\n    async fetchBlendCard({\n      commit\n    }, id) {\n      const docRef = doc(db, \"blendCards\", id);\n      const docSnap = await getDoc(docRef);\n      if (docSnap.exists()) {\n        commit(\"setBlendCard\", docSnap.data());\n      } else {\n        console.log(\"No such document!\");\n      }\n    }\n  }\n});","map":{"version":3,"names":["createStore","initializeApp","getFirestore","doc","setDoc","getDoc","getDocs","collection","addDoc","query","orderBy","where","updateDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","db","state","workspace","blendCard","getters","mutations","setWorkspace","payload","setBlendCard","actions","fetchWorkspace","commit","id","docRef","docSnap","exists","docData","data","blendCardRef","console","log","fetchBlendCard"],"sources":["D:/OneDrive/Documents/Code/Flutter/Blend/blend-website/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nimport { initializeApp } from \"firebase/app\";\nimport {\n    getFirestore,\n    doc,\n    setDoc,\n    getDoc,\n    getDocs,\n    collection,\n    addDoc,\n    query,\n    orderBy,\n    where,\n    updateDoc,\n} from \"firebase/firestore\";\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDmIaxkHWpEP0X8eYGEQ9YoPtFTtsYtcaM\",\n    authDomain: \"barista-blend.firebaseapp.com\",\n    projectId: \"barista-blend\",\n    storageBucket: \"barista-blend.appspot.com\",\n    messagingSenderId: \"438579021661\",\n    appId: \"1:438579021661:web:2bcd8c49187dc8277a0ab4\",\n    measurementId: \"G-PW10CEZGVE\"\n  };\n\n  const app = initializeApp(firebaseConfig);\n  const db = getFirestore(app);\n\nexport default createStore({\n  state: {\n    workspace: {},\n    blendCard: {},\n  },\n  getters: {\n    workspace(state) {\n      return state.workspace;\n    },\n    blendCard(state) {\n      return state.blendCard;\n    },\n  },\n  mutations: {\n    setWorkspace(state, payload) {\n      state.workspace = payload;\n    },\n    setBlendCard(state, payload) {\n      state.blendCard = payload;\n    },\n  },\n  actions: {\n    async fetchWorkspace({ commit }, id) {\n        const docRef = doc(db, `workspaces/${id}`);\n        const docSnap = await getDoc(docRef);\n        if (docSnap.exists()) {\n            docData = docSnap.data();\n            commit(\"setWorkspace\", docData);\n            const blendCardRef = doc(db, docData.blendCard);\n            \n            \n        } else {\n            console.log(\"No such document!\");\n        }\n    },\n    async fetchBlendCard({ commit }, id) {\n        const docRef = doc(db, \"blendCards\", id);\n        const docSnap = await getDoc(docRef);\n        if (docSnap.exists()) {\n            commit(\"setBlendCard\", docSnap.data());\n        } else {\n            console.log(\"No such document!\");\n        }\n    },\n  },\n})\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,SAASC,aAAa,QAAQ,cAAc;AAC5C,SACIC,YAAY,EACZC,GAAG,EACHC,MAAM,EACNC,MAAM,EACNC,OAAO,EACPC,UAAU,EACVC,MAAM,EACNC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,SAAS,QACN,oBAAoB;;AAE3B;AACA,MAAMC,cAAc,GAAG;EACnBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,+BAA+B;EAC3CC,SAAS,EAAE,eAAe;EAC1BC,aAAa,EAAE,2BAA2B;EAC1CC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,GAAG,GAAGpB,aAAa,CAACY,cAAc,CAAC;AACzC,MAAMS,EAAE,GAAGpB,YAAY,CAACmB,GAAG,CAAC;AAE9B,eAAerB,WAAW,CAAC;EACzBuB,KAAK,EAAE;IACLC,SAAS,EAAE,CAAC,CAAC;IACbC,SAAS,EAAE,CAAC;EACd,CAAC;EACDC,OAAO,EAAE;IACPF,SAASA,CAACD,KAAK,EAAE;MACf,OAAOA,KAAK,CAACC,SAAS;IACxB,CAAC;IACDC,SAASA,CAACF,KAAK,EAAE;MACf,OAAOA,KAAK,CAACE,SAAS;IACxB;EACF,CAAC;EACDE,SAAS,EAAE;IACTC,YAAYA,CAACL,KAAK,EAAEM,OAAO,EAAE;MAC3BN,KAAK,CAACC,SAAS,GAAGK,OAAO;IAC3B,CAAC;IACDC,YAAYA,CAACP,KAAK,EAAEM,OAAO,EAAE;MAC3BN,KAAK,CAACE,SAAS,GAAGI,OAAO;IAC3B;EACF,CAAC;EACDE,OAAO,EAAE;IACP,MAAMC,cAAcA,CAAC;MAAEC;IAAO,CAAC,EAAEC,EAAE,EAAE;MACjC,MAAMC,MAAM,GAAGhC,GAAG,CAACmB,EAAE,EAAG,cAAaY,EAAG,EAAC,CAAC;MAC1C,MAAME,OAAO,GAAG,MAAM/B,MAAM,CAAC8B,MAAM,CAAC;MACpC,IAAIC,OAAO,CAACC,MAAM,CAAC,CAAC,EAAE;QAClBC,OAAO,GAAGF,OAAO,CAACG,IAAI,CAAC,CAAC;QACxBN,MAAM,CAAC,cAAc,EAAEK,OAAO,CAAC;QAC/B,MAAME,YAAY,GAAGrC,GAAG,CAACmB,EAAE,EAAEgB,OAAO,CAACb,SAAS,CAAC;MAGnD,CAAC,MAAM;QACHgB,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MACpC;IACJ,CAAC;IACD,MAAMC,cAAcA,CAAC;MAAEV;IAAO,CAAC,EAAEC,EAAE,EAAE;MACjC,MAAMC,MAAM,GAAGhC,GAAG,CAACmB,EAAE,EAAE,YAAY,EAAEY,EAAE,CAAC;MACxC,MAAME,OAAO,GAAG,MAAM/B,MAAM,CAAC8B,MAAM,CAAC;MACpC,IAAIC,OAAO,CAACC,MAAM,CAAC,CAAC,EAAE;QAClBJ,MAAM,CAAC,cAAc,EAAEG,OAAO,CAACG,IAAI,CAAC,CAAC,CAAC;MAC1C,CAAC,MAAM;QACHE,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MACpC;IACJ;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}